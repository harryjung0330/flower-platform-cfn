AWSTemplateFormatVersion: 2010-09-09
Parameters:
  #required parameters
  LoadBalancerSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: subnets for loadbalancer
  WebServerSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: At least two subnets in different Availability Zones in the selected VPC
  VPC:
    Type: 'AWS::EC2::VPC::Id'
    Description: A VPC that allows the load balancer access to the Internet
  BastionServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup::Id'
    Description: Security group for bastion server
  SSHKeyName:
    Type: String
    Description: ssh key name for web server
  AmiId:
    Type: String
    Description: AMI for web servers
    
  #optional parameters
  HealthCheckPath:
    Type: String
    Description: Health check path for the webserver
    Default: '/'
  CPUPolicyTargetValue:
    Type: String
    Description: The target utilization for the CPU metric
    Default: "70"
  MinCap:
    Type: String
    Description: minimum number of ec2 instance
    Default: '1'
  MaxCap:
    Type: String
    Description: maximum number of ec2 instance
    Default: '4'
  WebServerInstanceType:
    Type: String
    Description: Ec2 instance type for webserver
    Default: t2.micro
  
 
Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets: !Ref LoadBalancerSubnets
      SecurityGroups:
        - !Ref LoadBalancerSecGroup
  
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      
  DisableActuatorRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: application/json
            MessageBody: Forbidden
            StatusCode: '403'
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
             - /actuator/*
             - /actuator
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1
  
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: WebServerTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 20
      HealthCheckPath: !Ref HealthCheckPath
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP

    
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub ${AWS::StackName}-web-server-launch-template
      LaunchTemplateData:
        ImageId: !Ref AmiId
        InstanceType: !Ref WebServerInstanceType
        SecurityGroupIds: 
          - !Ref WebServerSecGroup
        Monitoring: 
          Enabled: true
        KeyName: !Ref SSHKeyName

  LoadBalancerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security group for load balancer
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId: !Ref VPC

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security group for web servers
      SecurityGroupIngress: 
        - SourceSecurityGroupId: !Ref BastionServerSecurityGroup
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - SourceSecurityGroupId: !Ref LoadBalancerSecGroup
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId: !Ref VPC

  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MaxSize: !Ref MaxCap
      MinSize: !Ref MinCap
      DefaultInstanceWarmup: 30
      VPCZoneIdentifier: !Ref WebServerSubnets
      TargetGroupARNs:
        - !Ref TargetGroup

  CPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref ASG
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: !Ref CPUPolicyTargetValue

Outputs:
  LoadBalancerArn:
    Description: Security group id
    Value: !Ref LoadBalancer
  
  WebServerSecGroupId:
    Description: id for bastion server
    Value: !GetAtt WebServerSecGroup.GroupId
  
  AsgName:
    Description: ASG name for web servers
    Value: !Ref ASG
  
  TargetGroupArn:
    Description: Target group for web servers
    Value: !GetAtt TargetGroup.TargetGroupArn

    